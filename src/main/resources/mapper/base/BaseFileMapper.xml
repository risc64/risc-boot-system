<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.risc.boot.modules.base.dao.BaseFileDao">

    <resultMap type="com.risc.boot.modules.base.bo.BaseFile" id="BaseFileMap">
        <result property="uid" column="uid" jdbcType="VARCHAR"/>
        <result property="showName" column="show_name" jdbcType="VARCHAR"/>
        <result property="fileName" column="file_name" jdbcType="VARCHAR"/>
        <result property="filePath" column="file_path" jdbcType="VARCHAR"/>
        <result property="dfsPath" column="dfs_path" jdbcType="VARCHAR"/>
        <result property="tempFlag" column="temp_flag" jdbcType="INTEGER"/>
        <result property="fileType" column="file_type" jdbcType="INTEGER"/>
        <result property="createUserUid" column="create_user_uid" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateUserUid" column="update_user_uid" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    
    <!-- 基本字段 -->
    <sql id="Base_Column_List">
uid, show_name, file_name, file_path, dfs_path, temp_flag, file_type, create_user_uid, create_time, update_user_uid, update_time    </sql>

    <!--通过ID查询单条数据-->
    <select id="selectByKey" resultMap="BaseFileMap">
        select
          <include refid="Base_Column_List" />
        from base_file
        where uid = #{uid}
    </select>
    
    <!--新增数据-->
    <insert id="insert" keyProperty="uid" useGeneratedKeys="true">
        insert into base_file(uid, show_name, file_name, file_path, dfs_path, temp_flag, file_type, create_user_uid, create_time)
        values (#{uid}, #{showName}, #{fileName}, #{filePath}, #{dfsPath}, #{tempFlag}, #{fileType}, #{createUserUid}, now())
    </insert>
    
    <!--修改数据-->
    <update id="update">
        update base_file
        <set>
        show_name = #{showName},
        file_name = #{fileName},
        file_path = #{filePath},
        dfs_path = #{dfsPath},
        temp_flag = #{tempFlag},
        file_type = #{fileType},
        update_user_uid = #{updateUserUid},
        update_time = now()
        </set>
        where uid = #{uid}
    </update>
    
    <!--通过主键删除-->
    <delete id="deleteByKey">
        delete from base_file 
        where uid = #{uid}
    </delete>
    
    <!--批量新增-->
    <insert id="insertBatch" keyProperty="uid" useGeneratedKeys="true">
        insert into base_file(uid, show_name, file_name, file_path, dfs_path, temp_flag, file_type, create_user_uid, create_time)
        values 
        <foreach collection = "list" item = "item" separator = ",">
        (#{item.uid},#{item.showName},#{item.fileName},#{item.filePath},#{item.dfsPath},#{item.tempFlag},#{item.fileType},#{item.createUserUid},now)
        </foreach>
    </insert>
    
    <!--批量删除-->
    <delete id="deleteBatch">
        delete from base_file 
        where uid in
        <foreach collection = "list" item = "item" separator = "," open = "(" close = ")">
            #{item}
        </foreach>
    </delete>
    
    <!--条件查询 注意：修改此sql时须同时修改 分页查询Count ，并去掉不必要的外联、排序等，保证分页查询总页数正确 -->
    <select id="selectByProperty" resultMap="BaseFileMap">
        select
          <include refid="Base_Column_List" />
        from base_file
        <where>
            <if test="record.uid != null and record.uid != ''">
                and uid = #{record.uid}
            </if>
            <if test="record.showName != null and record.showName != ''">
                and show_name = #{record.showName}
            </if>
            <if test="record.fileName != null and record.fileName != ''">
                and file_name = #{record.fileName}
            </if>
            <if test="record.filePath != null and record.filePath != ''">
                and file_path = #{record.filePath}
            </if>
            <if test="record.dfsPath != null and record.dfsPath != ''">
                and dfs_path = #{record.dfsPath}
            </if>
            <if test="record.tempFlag != null">
                and temp_flag = #{record.tempFlag}
            </if>
            <if test="record.fileType != null">
                and file_type = #{record.fileType}
            </if>
            <if test="record.createUserUid != null and record.createUserUid != ''">
                and create_user_uid = #{record.createUserUid}
            </if>
            <if test="record.createTime != null">
                and create_time = #{record.createTime}
            </if>
            <if test="record.updateUserUid != null and record.updateUserUid != ''">
                and update_user_uid = #{record.updateUserUid}
            </if>
            <if test="record.updateTime != null">
                and update_time = #{record.updateTime}
            </if>
        </where>
        order by create_time desc
    </select>
    
    <!--分页查询Count-->
    <select id="selectByPropertyCount" resultType="Long">
        select
          count(uid)
        from base_file
        <where>
            <if test="record.uid != null and record.uid != ''">
                and uid = #{record.uid}
            </if>
            <if test="record.showName != null and record.showName != ''">
                and show_name = #{record.showName}
            </if>
            <if test="record.fileName != null and record.fileName != ''">
                and file_name = #{record.fileName}
            </if>
            <if test="record.filePath != null and record.filePath != ''">
                and file_path = #{record.filePath}
            </if>
            <if test="record.dfsPath != null and record.dfsPath != ''">
                and dfs_path = #{record.dfsPath}
            </if>
            <if test="record.tempFlag != null">
                and temp_flag = #{record.tempFlag}
            </if>
            <if test="record.fileType != null">
                and file_type = #{record.fileType}
            </if>
            <if test="record.createUserUid != null and record.createUserUid != ''">
                and create_user_uid = #{record.createUserUid}
            </if>
            <if test="record.createTime != null">
                and create_time = #{record.createTime}
            </if>
            <if test="record.updateUserUid != null and record.updateUserUid != ''">
                and update_user_uid = #{record.updateUserUid}
            </if>
            <if test="record.updateTime != null">
                and update_time = #{record.updateTime}
            </if>
        </where>
    </select>

</mapper>

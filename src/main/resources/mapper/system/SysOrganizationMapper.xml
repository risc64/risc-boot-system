<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.risc.boot.modules.system.dao.SysOrganizationDao">

    <resultMap type="com.risc.boot.modules.system.bo.SysOrganization" id="SysOrganizationMap">
        <result property="uid" column="uid" jdbcType="VARCHAR"/>
        <result property="organizationName" column="organization_name" jdbcType="VARCHAR"/>
        <result property="organizationCode" column="organization_code" jdbcType="VARCHAR"/>
        <result property="parentUid" column="parent_uid" jdbcType="VARCHAR"/>
        <result property="registId" column="regist_id" jdbcType="VARCHAR"/>
        <result property="artificialPerson" column="artificial_person" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="contact" column="contact" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="province" column="province" jdbcType="VARCHAR"/>
        <result property="city" column="city" jdbcType="VARCHAR"/>
        <result property="area" column="area" jdbcType="VARCHAR"/>
        <result property="createUserUid" column="create_user_uid" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="editUserUid" column="edit_user_uid" jdbcType="VARCHAR"/>
        <result property="editTime" column="edit_time" jdbcType="TIMESTAMP"/>
        <result property="childrenUidStr" column="children_uid_str" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap type="com.risc.boot.modules.system.bo.SysOrganization" id="SysOrganizationMapTree">
        <result property="uid" column="uid" jdbcType="VARCHAR"/>
        <result property="organizationName" column="organization_name" jdbcType="VARCHAR"/>
        <result property="organizationCode" column="organization_code" jdbcType="VARCHAR"/>
        <result property="parentUid" column="parent_uid" jdbcType="VARCHAR"/>
        <result property="registId" column="regist_id" jdbcType="VARCHAR"/>
        <result property="artificialPerson" column="artificial_person" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="contact" column="contact" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="province" column="province" jdbcType="VARCHAR"/>
        <result property="city" column="city" jdbcType="VARCHAR"/>
        <result property="area" column="area" jdbcType="VARCHAR"/>
        <result property="createUserUid" column="create_user_uid" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="editUserUid" column="edit_user_uid" jdbcType="VARCHAR"/>
        <result property="editTime" column="edit_time" jdbcType="TIMESTAMP"/>
        <result property="childrenUidStr" column="children_uid_str" jdbcType="VARCHAR"/>
        <collection property="children" column="{parentUid=uid, childrenUidStr=children_uid_str}"  ofType="com.risc.boot.modules.system.bo.SysOrganization" javaType="java.util.List" select="selectChild" >
        </collection>
    </resultMap>

    <!-- 基本字段 -->
    <sql id="Base_Column_List">
        uid, organization_name, organization_code, parent_uid, regist_id, artificial_person, address, phone, contact, description, province, city, area, create_user_uid, create_time, edit_user_uid, edit_time
    </sql>

    <select id="selectChild" resultMap="SysOrganizationMapTree">
        select
            o.uid, o.organization_name, o.organization_code, o.parent_uid, o.regist_id, o.artificial_person, o.address, o.phone, o.contact,
            o.description, o.province, o.city, o.area, o.create_user_uid, o.create_time, o.edit_user_uid, o.edit_time, a.children_uid_str
        from sys_organization o
        left join (
            SELECT parent_uid, GROUP_CONCAT(uid) children_uid_str
            FROM sys_organization
            <where>
                parent_uid is not null
                <if test="childrenUidStr != null and childrenUidStr != ''">
                   and find_in_set(uid, #{childrenUidStr})
                </if>
            </where>
        ) a on o.uid = a.parent_uid
        <where>
            o.parent_uid = #{parentUid}
            <if test="childrenUidStr != null and childrenUidStr != ''">
              and  find_in_set(o.uid, #{childrenUidStr})
            </if>
        </where>
    </select>

    <!--通过ID查询单条数据-->
    <select id="selectByKey" resultMap="SysOrganizationMap">
        select
        <include refid="Base_Column_List"/>
        from sys_organization
        where uid = #{uid}
    </select>

    <!--新增数据-->
    <insert id="insert" keyProperty="uid" useGeneratedKeys="true">
        insert into sys_organization(uid, organization_name, organization_code, parent_uid, regist_id, artificial_person, address, phone, contact, description, province, city, area, create_user_uid, create_time, edit_user_uid, edit_time)
        values (#{uid}, #{organizationName}, #{organizationCode}, #{parentUid}, #{registId}, #{artificialPerson}, #{address}, #{phone}, #{contact}, #{description}, #{province}, #{city}, #{area}, #{createUserUid}, now(), #{editUserUid}, #{editTime})
    </insert>

    <!--修改数据-->
    <update id="update">
        update sys_organization
        <set>
            organization_name = #{organizationName},
            organization_code = #{organizationCode},
            parent_uid = #{parentUid},
            regist_id = #{registId},
            artificial_person = #{artificialPerson},
            address = #{address},
            phone = #{phone},
            contact = #{contact},
            description = #{description},
            province = #{province},
            city = #{city},
            area = #{area},
            edit_user_uid = #{editUserUid},
            edit_time = now()
        </set>
        where uid = #{uid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteByKey">
        delete from sys_organization 
        where uid = #{uid}
    </delete>

    <!--批量新增-->
    <insert id="insertBatch" keyProperty="uid" useGeneratedKeys="true">
        insert into sys_organization(uid, organization_name, organization_code, parent_uid, regist_id,
        artificial_person, address, phone, contact, description, province, city, area, create_user_uid, create_time,
        edit_user_uid, edit_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.uid},#{item.organizationName},#{item.organizationCode},#{item.parentUid},#{item.registId},#{item.artificialPerson},#{item.address},#{item.phone},#{item.contact},#{item.description},#{item.province},#{item.city},#{item.area},#{item.createUserUid},now(),#{item.editUserUid},#{item.editTime})
        </foreach>
    </insert>

    <!--批量删除-->
    <delete id="deleteBatch">
        delete from sys_organization
        where uid in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <!--条件查询 注意：修改此sql时须同时修改 分页查询Count ，并去掉不必要的外联、排序等，保证分页查询总页数正确 -->
    <select id="selectByProperty" resultMap="SysOrganizationMapTree">
        select
            o.uid, o.organization_name, o.organization_code, o.parent_uid, o.regist_id, o.artificial_person, o.address, o.phone, o.contact,
            o.description, o.province, o.city, o.area, o.create_user_uid, o.create_time, o.edit_user_uid, o.edit_time,  a.children_uid_str
        from sys_organization o
        left join (
            SELECT parent_uid, GROUP_CONCAT(uid) children_uid_str
            FROM sys_organization
            <where>
                parent_uid is not null
                <if test="record.uid != null and record.uid != ''">
                    and uid = #{record.uid}
                </if>
                <if test="record.organizationName != null and record.organizationName != ''">
                    and (organization_name like concat('%',#{record.organizationName},'%') or
                    uid in (select parent_uid from sys_organization where organization_name like concat('%',#{record.organizationName},'%'))
                    )
                </if>
                <if test="record.organizationCode != null and record.organizationCode != ''">
                    and organization_code = #{record.organizationCode}
                </if>
                <if test="record.registId != null and record.registId != ''">
                    and regist_id = #{record.registId}
                </if>
                <if test="record.artificialPerson != null and record.artificialPerson != ''">
                    and artificial_person = #{record.artificialPerson}
                </if>
                <if test="record.address != null and record.address != ''">
                    and address = #{record.address}
                </if>
                <if test="record.phone != null and record.phone != ''">
                    and phone = #{record.phone}
                </if>
                <if test="record.contact != null and record.contact != ''">
                    and contact = #{record.contact}
                </if>
                <if test="record.description != null and record.description != ''">
                    and description = #{record.description}
                </if>
                <if test="record.province != null and record.province != ''">
                    and province = #{record.province}
                </if>
                <if test="record.city != null and record.city != ''">
                    and city = #{record.city}
                </if>
                <if test="record.area != null and record.area != ''">
                    and area = #{record.area}
                </if>
                <if test="record.createUserUid != null and record.createUserUid != ''">
                    and create_user_uid = #{record.createUserUid}
                </if>
                <if test="record.createTime != null">
                    and create_time = #{record.createTime}
                </if>
                <if test="record.editUserUid != null and record.editUserUid != ''">
                    and edit_user_uid = #{record.editUserUid}
                </if>
                <if test="record.editTime != null">
                    and edit_time = #{record.editTime}
                </if>
            </where>
        ) a on a.parent_uid = o.uid
        <where>
            o.parent_uid is null
            <if test="record.uid != null and record.uid != ''">
                and o.uid = #{record.uid}
            </if>
            <if test="record.organizationName != null and record.organizationName != ''">
                and (o.organization_name like concat('%',#{record.organizationName},'%') or
                o.uid in (select parent_uid from sys_organization where organization_name like concat('%',#{record.organizationName},'%'))
                )
            </if>
            <if test="record.organizationCode != null and record.organizationCode != ''">
                and o.organization_code = #{record.organizationCode}
            </if>
            <if test="record.parentUid != null and record.parentUid != ''">
                and o.parent_uid = #{record.parentUid}
            </if>
            <if test="record.registId != null and record.registId != ''">
                and o.regist_id = #{record.registId}
            </if>
            <if test="record.artificialPerson != null and record.artificialPerson != ''">
                and o.artificial_person = #{record.artificialPerson}
            </if>
            <if test="record.address != null and record.address != ''">
                and o.address = #{record.address}
            </if>
            <if test="record.phone != null and record.phone != ''">
                and o.phone = #{record.phone}
            </if>
            <if test="record.contact != null and record.contact != ''">
                and o.contact = #{record.contact}
            </if>
            <if test="record.description != null and record.description != ''">
                and o.description = #{record.description}
            </if>
            <if test="record.province != null and record.province != ''">
                and province = #{record.province}
            </if>
            <if test="record.city != null and record.city != ''">
                and o.city = #{record.city}
            </if>
            <if test="record.area != null and record.area != ''">
                and o.area = #{record.area}
            </if>
            <if test="record.createUserUid != null and record.createUserUid != ''">
                and o.create_user_uid = #{record.createUserUid}
            </if>
            <if test="record.createTime != null">
                and o.create_time = #{record.createTime}
            </if>
            <if test="record.editUserUid != null and record.editUserUid != ''">
                and o.edit_user_uid = #{record.editUserUid}
            </if>
            <if test="record.editTime != null">
                and o.edit_time = #{record.editTime}
            </if>
        </where>
        order by o.create_time desc
    </select>

    <!--分页查询Count-->
    <select id="selectByPropertyCount" resultType="Long">
        select
        count(uid)
        from sys_organization
        <where>
            parent_uid is null
            <if test="record.uid != null and record.uid != ''">
                and uid = #{record.uid}
            </if>
            <if test="record.organizationName != null and record.organizationName != ''">
                and organization_name like concat('%',#{record.organizationName},'%')
            </if>
            <if test="record.organizationCode != null and record.organizationCode != ''">
                and organization_code = #{record.organizationCode}
            </if>
            <if test="record.parentUid != null and record.parentUid != ''">
                and parent_uid = #{record.parentUid}
            </if>
            <if test="record.registId != null and record.registId != ''">
                and regist_id = #{record.registId}
            </if>
            <if test="record.artificialPerson != null and record.artificialPerson != ''">
                and artificial_person = #{record.artificialPerson}
            </if>
            <if test="record.address != null and record.address != ''">
                and address = #{record.address}
            </if>
            <if test="record.phone != null and record.phone != ''">
                and phone = #{record.phone}
            </if>
            <if test="record.contact != null and record.contact != ''">
                and contact = #{record.contact}
            </if>
            <if test="record.description != null and record.description != ''">
                and description = #{record.description}
            </if>
            <if test="record.province != null and record.province != ''">
                and province = #{record.province}
            </if>
            <if test="record.city != null and record.city != ''">
                and city = #{record.city}
            </if>
            <if test="record.area != null and record.area != ''">
                and area = #{record.area}
            </if>
            <if test="record.createUserUid != null and record.createUserUid != ''">
                and create_user_uid = #{record.createUserUid}
            </if>
            <if test="record.createTime != null">
                and create_time = #{record.createTime}
            </if>
            <if test="record.editUserUid != null and record.editUserUid != ''">
                and edit_user_uid = #{record.editUserUid}
            </if>
            <if test="record.editTime != null">
                and edit_time = #{record.editTime}
            </if>
        </where>
    </select>

</mapper>
